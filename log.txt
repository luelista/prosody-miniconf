info: socket.io started
info: handshake authorized Gkw6kuqslkx3xUscyFKe
try to connect as mw
...subscribing to friends: 13
info: transport end (socket end)
info: handshake authorized J2QXxHQMjo1tLWugyFKf
try to connect as mw
...subscribing to friends: 13
{ domain: null,
  _events: null,
  _maxListeners: 10,
  socket: 
   { domain: null,
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'secure.teamwiki.de',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _writeCalled: false,
        cycleEncryptedPullLock: false,
        cycleCleartextPullLock: false,
        cycleCleartextPushLock: true,
        cycleEncryptedPushLock: false },
     writable: true,
     readable: true,
     _paused: false,
     _needDrain: false,
     _pending: [],
     _pendingCallbacks: [],
     _pendingBytes: 0,
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 01 00 4b 02 00 00 47 03 01 50 ee 06 3e aa 0b 58 76 27 7f b9 77 e4 1a 07 ee 31 cc 9b 84 96 8e 43 1a 3b 46 f4 72 ca 80 71 37 00 00 35 00 00 1f ff 01 ...>,
        offset: 104587,
        remaining: 10381173 },
     socket: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 2247,
        _bytesDispatched: 81450,
        allowHalfOpen: false,
        writable: true,
        readable: true,
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Thu Jan 10 2013 00:07:32 GMT+0000 (GMT) },
     encrypted: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'secure.teamwiki.de',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        viewCallbacks: [],
        locals: [Function: locals] } },
  connection: 
   { domain: null,
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'secure.teamwiki.de',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _writeCalled: false,
        cycleEncryptedPullLock: false,
        cycleCleartextPullLock: false,
        cycleCleartextPushLock: true,
        cycleEncryptedPushLock: false },
     writable: true,
     readable: true,
     _paused: false,
     _needDrain: false,
     _pending: [],
     _pendingCallbacks: [],
     _pendingBytes: 0,
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 01 00 4b 02 00 00 47 03 01 50 ee 06 3e aa 0b 58 76 27 7f b9 77 e4 1a 07 ee 31 cc 9b 84 96 8e 43 1a 3b 46 f4 72 ca 80 71 37 00 00 35 00 00 1f ff 01 ...>,
        offset: 104587,
        remaining: 10381173 },
     socket: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 2247,
        _bytesDispatched: 81450,
        allowHalfOpen: false,
        writable: true,
        readable: true,
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Thu Jan 10 2013 00:07:32 GMT+0000 (GMT) },
     encrypted: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'secure.teamwiki.de',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        viewCallbacks: [],
        locals: [Function: locals] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'secure.teamwiki.de:8443',
     connection: 'keep-alive',
     'content-length': '10935',
     origin: 'https://secure.teamwiki.de:8443',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.97 Safari/537.11',
     'content-type': 'multipart/form-data;boundary=chatAttachmentUploader',
     accept: '*/*',
     referer: 'https://secure.teamwiki.de:8443/',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
     cookie: 'twnetSID=6j5agjv3oi6kairlbupdqtq7essrcmv6' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/upload_media',
  method: 'POST',
  statusCode: null,
  client: 
   { domain: null,
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'secure.teamwiki.de',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _writeCalled: false,
        cycleEncryptedPullLock: false,
        cycleCleartextPullLock: false,
        cycleCleartextPushLock: true,
        cycleEncryptedPushLock: false },
     writable: true,
     readable: true,
     _paused: false,
     _needDrain: false,
     _pending: [],
     _pendingCallbacks: [],
     _pendingBytes: 0,
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 01 00 4b 02 00 00 47 03 01 50 ee 06 3e aa 0b 58 76 27 7f b9 77 e4 1a 07 ee 31 cc 9b 84 96 8e 43 1a 3b 46 f4 72 ca 80 71 37 00 00 35 00 00 1f ff 01 ...>,
        offset: 104587,
        remaining: 10381173 },
     socket: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 2247,
        _bytesDispatched: 81450,
        allowHalfOpen: false,
        writable: true,
        readable: true,
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Thu Jan 10 2013 00:07:32 GMT+0000 (GMT) },
     encrypted: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'secure.teamwiki.de',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        viewCallbacks: [],
        locals: [Function: locals] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/upload_media',
  _parsedUrl: 
   { pathname: '/upload_media',
     path: '/upload_media',
     href: '/upload_media' },
  query: {},
  app: 
   { [Function: app]
     use: [Function],
     handle: [Function],
     listen: [Function],
     setMaxListeners: [Function],
     emit: [Function],
     addListener: [Function],
     on: [Function],
     once: [Function],
     removeListener: [Function],
     removeAllListeners: [Function],
     listeners: [Function],
     route: '/',
     stack: [ [Object], [Object], [Object] ],
     init: [Function],
     defaultConfiguration: [Function],
     engine: [Function],
     param: [Function],
     set: [Function],
     path: [Function],
     enabled: [Function],
     disabled: [Function],
     enable: [Function],
     disable: [Function],
     configure: [Function],
     get: [Function],
     post: [Function],
     put: [Function],
     head: [Function],
     delete: [Function],
     options: [Function],
     trace: [Function],
     copy: [Function],
     lock: [Function],
     mkcol: [Function],
     move: [Function],
     propfind: [Function],
     proppatch: [Function],
     unlock: [Function],
     report: [Function],
     mkactivity: [Function],
     checkout: [Function],
     merge: [Function],
     'm-search': [Function],
     notify: [Function],
     subscribe: [Function],
     unsubscribe: [Function],
     patch: [Function],
     all: [Function],
     del: [Function],
     render: [Function],
     request: {},
     response: {},
     cache: {},
     settings: 
      { 'x-powered-by': true,
        env: 'development',
        views: '/home/max.weller/chat/views',
        'jsonp callback name': 'callback',
        'json spaces': 2 },
     engines: {},
     viewCallbacks: [],
     _events: { mount: [Function] },
     _router: 
      { map: [Object],
        params: {},
        _params: [],
        caseSensitive: false,
        strict: false,
        middleware: [Function: router] },
     routes: { get: [Object], post: [Object] },
     router: [Getter],
     locals: { [Function: locals] settings: [Object] },
     _usedRouter: true },
  res: 
   { domain: null,
     _events: { finish: [Function] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        _buffer: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'secure.teamwiki.de',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     connection: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        _buffer: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'secure.teamwiki.de',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     app: 
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: {},
        response: {},
        cache: {},
        settings: [Object],
        engines: {},
        viewCallbacks: [],
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        _usedRouter: true },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     viewCallbacks: [],
     locals: [Function: locals] },
  next: [Function: next],
  _route_index: 0,
  route: 
   { path: '/upload_media',
     method: 'post',
     callbacks: [ [Function] ],
     keys: [],
     regexp: /^\/upload_media\/?$/i,
     params: [] },
  params: [] }
